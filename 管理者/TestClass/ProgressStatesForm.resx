<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BunifuCircleProgressbar1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>